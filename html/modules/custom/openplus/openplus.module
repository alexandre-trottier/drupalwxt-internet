<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\node\Entity\Node;
use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\user\UserInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Breadcrumb\Breadcrumb;
use Drupal\Core\Routing\RouteMatchInterface;

function openplus_moderation_sidebar_alter(array &$build, \Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'node') {
    $build['page_info'] = views_embed_view('page_information', 'block_1', $entity->id());
    //unset($build['actions']);
  }
}

function openplus_preprocess_page(&$variables) {
  $variables['#attached']['library'][] =
    'openplus/data-tables';
}

function openplus_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'custom_search_block_form':
      $form['actions']['submit']['#id'] = 'wb-srch-sub';
      $form['actions']['submit']['#name'] = 'op';
      $form['actions']['submit']['#value'] = '';
      $form['actions']['submit']['#attributes']['class'][] = 'btn-primary';
      //$form['actions']['submit']['#submit'][] = 'openplus_search_submit';
    break;
    case 'node_property_form':
      openplus_add_cancel($form);
      openplus_hide_tags($form);
    break;
    case 'node_migration_mi_form':
      // hide some info on migration source edit
      $form['revision_log']['#access'] = FALSE;
      $form['revision_information']['#access'] = FALSE;
      unset($form['actions']['delete']);
      unset($form['advanced']);
      unset($form['meta']);
    break;
  }
}

function openplus_search_submit(array $form, FormStateInterface $form_state){
 
}

function openplus_add_cancel(&$form) {
  $form['actions']['submit_cancel'] = array (
    '#type' => 'submit',
    '#weight' => 999,
    '#value' => t('Cancel'),
    '#submit' => array('openplus_cancel_callback'),
    '#limit_validation_errors' => [],
  );
}

function openplus_hide_tags(&$form) {
  // Get the current user
  $user = \Drupal::currentUser()->getRoles();
  if (!in_array("administrator", $user)) {
    $form['revision_log']['#access'] = FALSE;
    $form['revision_information']['#access'] = FALSE;
    //$form['moderation_state']['#access'] = FALSE;
  }
  //vdpm($form);
}

function openplus_cancel_callback(array &$form, \Drupal\Core\Form\FormStateInterface &$form_state) {
// Apparently, the cancel button just uses the destination param without us forcing it
/*
  $destination = \Drupal::request()->query->get('destination');
  if (!empty($destination)) {
    $path = \Drupal::service('path.alias_manager')->getPathByAlias($destination);
    $node_path = explode('/', $path);
    if (isset($node_path[2]) && is_numeric($node_path[2])) {
      $form_state->setRedirect('entity.node.canonical', array('node' => $node_path[2]));
    }
  }
*/
}

function openplus_system_breadcrumb_alter(Breadcrumb &$breadcrumb, RouteMatchInterface $route_match, array $context) {
  if (!empty($breadcrumb)) {
    $links = $breadcrumb->getLinks();
    $node = $route_match->getParameter('node');
    $new_links = [];
    $title = 'Home';
    $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $url = Url::fromUri('https://www.canada.ca/' . $lang . '.html');
    $new_links[] = Link::fromTextAndUrl(t($title), $url);

    $breadcrumb = new Breadcrumb();
    $breadcrumb->setLinks(array_merge($new_links, $links));
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function openplus_entity_type_alter(array &$entity_types) {
  foreach ($entity_types as $entity_type) {
    $constraints = $entity_type->getConstraints();
    unset($constraints['EntityUntranslatableFields']);
    $entity_type->setConstraints($constraints);
  }
}

/**
 * Implements hook_webform_element_ELEMENT_TYPE_alter().
 */
function openplus_webform_element_webform_time_alter(array &$element, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {
  // change time format to 24h for French
  $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if ($lang == 'fr') {
    $element['#time_format'] = 'H:i';
  }
}
